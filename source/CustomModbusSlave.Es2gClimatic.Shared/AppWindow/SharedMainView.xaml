<controls:MetroWindow
	x:Class="CustomModbusSlave.Es2gClimatic.Shared.AppWindow.SharedMainView"
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:controls="http://metro.mahapps.com/winfx/xaml/controls"
	xmlns:converters="clr-namespace:AlienJust.Adaptation.WindowsPresentation.Converters;assembly=AlienJust.Adaptation.WindowsPresentation"
	xmlns:progamLog="clr-namespace:CustomModbusSlave.Es2gClimatic.Shared.ProgamLog"
	xmlns:iconPacks="http://metro.mahapps.com/winfx/xaml/iconpacks"
	xmlns:record="clr-namespace:CustomModbusSlave.Es2gClimatic.Shared.Record"
	Title="{Binding Path=WindowTitle, Mode=OneWay}"
	TitleCharacterCasing="Normal"
	Height="480"
	Width="640"
	ResizeMode="CanResizeWithGrip"
	SaveWindowPosition="True"
	NonActiveWindowTitleBrush="{DynamicResource AccentColorBrush3}"
	GlowBrush="{DynamicResource AccentColorBrush}"
	Closing="MetroWindow_Closing"
	Closed="MetroWindow_Closed">
	<Window.Resources>
		<ResourceDictionary>
			<ResourceDictionary.MergedDictionaries>
				<!-- MahApps.Metro resource dictionaries. Make sure that all file names are Case Sensitive! -->
				<!--<ResourceDictionary
					Source="pack://application:,,,/MahApps.Metro;component/Styles/Controls.xaml" />
				<ResourceDictionary
					Source="pack://application:,,,/MahApps.Metro;component/Styles/Fonts.xaml" />
				<ResourceDictionary
					Source="pack://application:,,,/MahApps.Metro;component/Styles/Colors.xaml" />
				<ResourceDictionary
					Source="pack://application:,,,/MahApps.Metro;component/Styles/Controls.AnimatedTabControl.xaml" />-->
				<!-- Accent and AppTheme setting -->
				<!--<ResourceDictionary
					Source="pack://application:,,,/MahApps.Metro;component/Styles/Accents/Blue.xaml" />
				<ResourceDictionary
					Source="pack://application:,,,/MahApps.Metro;component/Styles/Accents/BaseLight.xaml" />-->
			</ResourceDictionary.MergedDictionaries>
			<Style
				x:Key="AzureTabItem"
				TargetType="{x:Type TabItem}">
				<Setter
					Property="BorderBrush"
					Value="{DynamicResource AccentColorBrush}" />
				<Setter
					Property="Template">
					<Setter.Value>
						<ControlTemplate
							TargetType="TabItem">
							<Grid>
								<Grid.ColumnDefinitions>
									<ColumnDefinition
										Width="*" />
									<ColumnDefinition
										Width="Auto" />
								</Grid.ColumnDefinitions>
								<Border
									x:Name="border"
									BorderBrush="{TemplateBinding BorderBrush}"
									Padding="4,1,8,1"
									BorderThickness="0,0,0,4"
									Margin="2,2,0,0"
									SnapsToDevicePixels="True">
									<Border.Style>
										<Style
											TargetType="Border">
											<Setter
												Property="Background">
												<Setter.Value>
													<SolidColorBrush
														Color="{DynamicResource Gray8}" />
												</Setter.Value>
											</Setter>
										</Style>
									</Border.Style>
									<TextBlock
										x:Name="root"
										FontSize="14"
										Margin="2,4,8,2">
										<TextBlock.Style>
											<Style
												TargetType="TextBlock">
												<Setter
													Property="Foreground">
													<Setter.Value>
														<SolidColorBrush
															Color="{DynamicResource BlackColor}" />
													</Setter.Value>
												</Setter>
											</Style>
										</TextBlock.Style>
										<ContentPresenter
											ContentSource="Header"
											RecognizesAccessKey="True" />
									</TextBlock>
								</Border>
								<Canvas
									Grid.Column="1"
									Height="16"
									Width="8"
									x:Name="arrow"
									Margin="0,4,0,0"
									HorizontalAlignment="Left"
									SnapsToDevicePixels="True">
									<Path
										Data="M 0 0 L 8 8 L 0 16 Z"
										StrokeThickness="0"
										Fill="{DynamicResource AccentColorBrush}" />
								</Canvas>
							</Grid>
							<ControlTemplate.Triggers>
								<Trigger
									Property="IsSelected"
									Value="true">
									<Setter
										TargetName="root"
										Property="Foreground">
										<Setter.Value>
											<SolidColorBrush
												Color="{DynamicResource WhiteColor}" />
										</Setter.Value>
									</Setter>
									<Setter
										TargetName="border"
										Property="Background">
										<Setter.Value>
											<SolidColorBrush
												Color="{DynamicResource AccentColor}" />
										</Setter.Value>
									</Setter>
									<Setter
										TargetName="border"
										Property="BorderBrush">
										<Setter.Value>
											<SolidColorBrush
												Color="{DynamicResource AccentColor}" />
										</Setter.Value>
									</Setter>
									<Setter
										TargetName="arrow"
										Property="Visibility"
										Value="Visible" />
								</Trigger>
								<Trigger
									Property="IsSelected"
									Value="false">
									<Setter
										TargetName="root"
										Property="Foreground">
										<Setter.Value>
											<SolidColorBrush
												Color="{DynamicResource BlackColor}" />
										</Setter.Value>
									</Setter>
									<Setter
										TargetName="arrow"
										Property="Visibility"
										Value="Hidden" />
								</Trigger>
								<Trigger
									Property="IsMouseOver"
									Value="True">
									<Setter
										TargetName="root"
										Property="Foreground">
										<Setter.Value>
											<SolidColorBrush
												Color="{DynamicResource WhiteColor}" />
										</Setter.Value>
									</Setter>
									<Setter
										TargetName="border"
										Property="BorderBrush"
										Value="{DynamicResource AccentColorBrush}"></Setter>
									<Setter
										TargetName="border"
										Property="Background">
										<Setter.Value>
											<SolidColorBrush
												Color="{DynamicResource AccentColor}" />
										</Setter.Value>
									</Setter>
								</Trigger>
							</ControlTemplate.Triggers>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Style>

			<BooleanToVisibilityConverter
				x:Key="BtvConverter" />
			<converters:BooleanToVisibilityConverter
				x:Key="InvertedBtwConverter"
				InvertVisibility="True" />
			<converters:ColorsEnumToBrushConverter
				x:Key="ColorsEnumToBrushConverter" />
			<converters:ColorsEnumToColorConverter
				x:Key="ColorsEnumToColorConverter" />

			<DataTemplate
				x:Key="MenuItemTemplate"
				DataType="{x:Type controls:HamburgerMenuGlyphItem}">
				<Grid
					Height="48">
					<Grid.ColumnDefinitions>
						<ColumnDefinition
							Width="48" />
						<ColumnDefinition />
					</Grid.ColumnDefinitions>
					<TextBlock
						Grid.Column="0"
						FontSize="16"
						HorizontalAlignment="Center"
						VerticalAlignment="Center"
						FontFamily="Arial"
						Foreground="White"
						Text="{Binding Glyph}" />
					<TextBlock
						Grid.Column="1"
						VerticalAlignment="Center"
						FontSize="16"
						Foreground="White"
						Text="{Binding Label}" />
				</Grid>
			</DataTemplate>
		</ResourceDictionary>
	</Window.Resources>
	<controls:MetroWindow.WindowButtonCommands>
		<controls:WindowButtonCommands
			Template="{DynamicResource MahApps.Metro.Templates.WindowButtonCommands.Win10}" />
	</controls:MetroWindow.WindowButtonCommands>
	<controls:MetroWindow.LeftWindowCommands>
		<controls:WindowCommands>
			<ToggleButton
				Margin="2,2,2,2"
				IsChecked="{Binding Path=TabHeadersAreLong}"
				BorderThickness="0"
				Style="{DynamicResource AccentedSquareButtonStyle}">
				<iconPacks:PackIconMaterial
					Width="Auto"
					Height="Auto"
					Kind="Menu" />
			</ToggleButton>
		</controls:WindowCommands>
	</controls:MetroWindow.LeftWindowCommands>
	<controls:MetroWindow.RightWindowCommands>
		<controls:WindowCommands>
			<record:RecordView
				DataContext="{Binding Path=RecordVm, Mode=OneTime}" />
			<StackPanel
				Orientation="Horizontal">
				<TextBlock
					Margin="2,2,2,2"
					Text="Порт:"
					VerticalAlignment="Center" />
				<ComboBox
					Margin="2,2,2,2"
					ItemsSource="{Binding ComPortsAvailable}"
					SelectedItem="{Binding SelectedComName}" />
				<Button
					Margin="2,2,2,2"
					Command="{Binding GetPortsAvailableCommand}"
					FontWeight="SemiBold"
					BorderThickness="0"
					Style="{DynamicResource AccentedSquareButtonStyle}">
					<iconPacks:PackIconMaterial
						Width="Auto"
						Height="Auto"
						Kind="Refresh" />
				</Button>
			</StackPanel>
			<Button
				Margin="2,2,2,2"
				Command="{Binding Path=OpenPortCommand, Mode=OneTime}"
				Content="Подкл."
				Visibility="{Binding Path=IsPortOpened, Mode=OneWay, Converter={StaticResource InvertedBtwConverter}}"
				BorderThickness="0"
				Style="{DynamicResource AccentedSquareButtonStyle}" />
			<Button
				Margin="2,2,2,2"
				Command="{Binding Path=ClosePortCommand, Mode=OneTime}"
				Content="Откл."
				Visibility="{Binding Path=IsPortOpened, Mode=OneWay, Converter={StaticResource BtvConverter}}"
				BorderThickness="0"
				Style="{DynamicResource AccentedSquareButtonStyle}" />
		</controls:WindowCommands>
	</controls:MetroWindow.RightWindowCommands>
	<Grid>
		<Grid.RowDefinitions>
			<RowDefinition
				Height="6*" />
			<RowDefinition
				Height="1*" />
			<RowDefinition
				Height="Auto" />
		</Grid.RowDefinitions>
		<TabControl 
			Grid.Row="0"
			TabStripPlacement="Left" ItemsSource="{Binding Path=Tabs}">
			<TabControl.ItemContainerStyle>
				<Style BasedOn="{StaticResource AzureTabItem}">
					<Setter
					Property="TabItem.BorderBrush"
					Value="Black" />
				</Style>
			</TabControl.ItemContainerStyle>
			<TabControl.ItemTemplate>
				<DataTemplate>
					<StackPanel
						Orientation="Horizontal">
						<TextBlock
						Text="{Binding Path=ShortHeader, Mode=OneTime}"
						Visibility="{Binding Path=TabHeadersAreLong, Converter={StaticResource InvertedBtwConverter}}" />
						<TextBlock
						Text="{Binding Path=FullHeader, Mode=OneTime}"
						Visibility="{Binding Path=TabHeadersAreLong, Converter={StaticResource BtvConverter}}" />
					</StackPanel>
				</DataTemplate>
			</TabControl.ItemTemplate>
			<TabControl.ContentTemplate>
				<DataTemplate>
					<ContentPresenter Content="{Binding Path=Content, Mode=OneTime}" />
				</DataTemplate>
			</TabControl.ContentTemplate>
		</TabControl>
		<GridSplitter
			Grid.Row="1"
			Height="4"
			BorderBrush="{DynamicResource AccentColorBrush}"
			BorderThickness="1"
			VerticalAlignment="Top"
			Background="{DynamicResource AccentColorBrush}"
			ResizeDirection="Rows"
			HorizontalAlignment="Stretch" />
		<progamLog:ProgramLogView
			Grid.Row="1"
			DataContext="{Binding Path=ProgramLogVm, Mode=OneTime}"
			Margin="4,8,6,4" />
		<Border
			Grid.Row="2"
			Background="{Binding Path=LinkBackColor, Mode=TwoWay, Converter={StaticResource ColorsEnumToBrushConverter}}">
			<TextBlock
				Text="Связь"
				Margin="2,1,2,1" />
		</Border>
	</Grid>
</controls:MetroWindow>
